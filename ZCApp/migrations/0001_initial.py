# Generated by Django 4.2.5 on 2023-12-18 15:59

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombre_categoria', models.CharField(max_length=40, verbose_name='Nombre de categoria')),
                ('Descripcion_categoria', models.CharField(max_length=250, verbose_name='Descripci칩n de categoria')),
                ('Tipo_limpieza', models.CharField(choices=[('LIMPIEZA PROFUNDA', 'limpieza profunda'), ('LIMPIEZA NORMAL', 'limpieza normal'), ('LIMPIEZA LIGERA', 'limpieza ligera')], max_length=255, verbose_name='Tipo de limpieza')),
            ],
        ),
        migrations.CreateModel(
            name='Servicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nombre_servicio', models.CharField(max_length=40, verbose_name='Nombre del servicio')),
                ('Descripcion_servicio', models.CharField(max_length=250, verbose_name='Descripci칩n del servicio')),
                ('Precio_estimado', models.IntegerField(verbose_name='Asignar precio')),
            ],
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=255, verbose_name='Apellido')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='rut (11111111-1)')),
                ('password', models.CharField(max_length=500, verbose_name='Contrase침a')),
                ('telefono', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Administrador')),
                ('is_trabajador', models.BooleanField(default=False, verbose_name='trabajador')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud_servicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Direccion_limpieza', models.CharField(max_length=255, verbose_name='Lugar para realizar el servici칩')),
                ('telefono_contacto', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Numero telefonico')),
                ('Fecha_servicio', models.DateTimeField(verbose_name='Fecha para realizar el servicio')),
                ('Fecha_data', models.DateTimeField(auto_now_add=True)),
                ('Estado', models.CharField(default='Nuevo', max_length=40, verbose_name='Estado')),
                ('Servicios', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ZCApp.servicios')),
                ('cliente', models.ForeignKey(blank=True, default=None, limit_choices_to={'is_superuser': False, 'is_trabajador': False}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Categoria_servicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ZCApp.categoria')),
                ('Servicios', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ZCApp.servicios')),
            ],
        ),
    ]
